name: "[development] Deploy"

env:
  ENV: development
  TZ: Asia/Tokyo
  AWS_REGION: ap-northeast-1
  AWS_ACCOUNT_ID: 123456789012
  AWS_ROLE_TO_ASSUME: development-sbcntr-oidc-github

on:
  push:
    branches:
      - development
    paths:
      - "uv.lock"
      - "pyproject.toml"
      - "frontend/**"
      - "backend/**"
      - "build/**"
      - ".github/workflows/deploy.yml"
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    strategy:
      matrix:
        include:
          - dir: frontend
            name: frontend
            task_definition_file: sbcntr_frontend.json
          - name: backend
            dir: backend
            task_definition_file: sbcntr_backend.json

    steps:
      - name: Set current datetime
        run: |
          echo "DATETIME=$(date +'%Y%m%d'.'%H%M')" >> $GITHUB_ENV

      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "18.15"
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/setup-buildx-action@v3

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: "arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/${{ env.AWS_ROLE_TO_ASSUME }}"

      - uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push docker images to ECR
        id: build-push-image
        env:
          IMAGE_TAG: ${{ env.DATETIME }}
        run: |
          NAME=${{ matrix.name }}
          platform="linux/arm64"
          if [ "$NAME" = "frontend" ]; then
            cd ${{ matrix.dir }}
            npm ci
            npm run build
            cd ..
          fi
          ENV=${{ env.ENV }} NAME=${{ matrix.name }} DIR=${{ matrix.dir }} IMAGE_TAG=$IMAGE_TAG RELEASE=true ./build/build.sh $platform
          echo "image=${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.ap-northeast-1.amazonaws.com/${{ env.ENV }}/sbcntr/${{ matrix.name }}:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Replace variables in task definition
        run: |
          sed -i -e 's/{aws_account_id}/${{ env.AWS_ACCOUNT_ID }}/g' \
            ./build/development/${{ matrix.task_definition_file }}

      - name: Render ECS task definition
        id: rendering-task-definition
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ./build/development/${{ matrix.task_definition_file }}
          container-name: ${{ matrix.name }}
          image: ${{ steps.build-push-image.outputs.image }}

      - name: Deploy ECS task definition For Service
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.rendering-task-definition.outputs.task-definition }}
          cluster: ${{ env.ENV }}-sbcntr-main
          service: ${{ env.ENV }}-sbcntr-main/${{ matrix.name }}
          wait-for-service-stability: true
